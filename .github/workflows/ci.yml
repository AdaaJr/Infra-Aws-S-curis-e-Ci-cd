name: ci
on:
  push:
    branches: [ dev, staging, main ]
  pull_request:
    branches: [ dev, staging, main ]
permissions:
  id-token: write
  contents: read
jobs:
  build-test-scan:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: eu-west-3
      GO_VERSION: '1.22'
      TF_VERSION: '1.8.5'
      PROJECT_NAME: aws-secure-infra
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - run: echo "Install tools (tflint, tfsec, gitleaks, syft, trivy)"
      - run: terraform -chdir=infra/envs/dev fmt -recursive
      - run: terraform -chdir=infra/envs/dev validate
      - run: gitleaks detect --no-banner --redact --exit-code 1 || true
      - run: go build ./... && go test ./...
        working-directory: app
      - run: syft dir:. -o cyclonedx-json > sbom.cdx.json
      - uses: aws-actions/configure-aws-credentials@v4
        if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ECR_PUSH_ARN }}
          aws-region: ${{ env.AWS_REGION }}
      - uses: aws-actions/amazon-ecr-login@v2
        if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
      - run: docker build -t "${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}" -f app/Dockerfile .
        if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
      - run: docker push "${{ secrets.ECR_REPOSITORY_URI }}:${{ github.sha }}"
        if: github.ref != 'refs/heads/main' || github.event_name == 'pull_request'
      - run: terraform -chdir=infra/envs/dev init -backend=false && terraform -chdir=infra/envs/dev plan -out=plan.out
      - uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            sbom.cdx.json
            infra/envs/dev/plan.out
